define(["visitor-as/as"],(function(e){"use strict";function t(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var n=t(e);const{CommonFlags:r,NodeKind:i}=n;function s(e){return e.internalName.startsWith("~")}function a(e,t){return 0!=(e.flags&t)}function o(e){var t;return(null===(t=e.getClass())||void 0===t?void 0:t.internalName)??e.toString()}function c(e){let t=e.parent;for(;t!==t.parent;)t=t.parent;return t}function u(e){return{returnType:o(e.signature.returnType),parameters:e.signature.parameterTypes.map((e=>o(e)))}}function f(e){var t;const n={},r=null===(t=e.getClass)||void 0===t?void 0:t.call(e);if(!r)return n;if(n[r.internalName]={id:r.id,byteSize:r.nextMemoryOffset},r.typeArguments)for(const e of r.typeArguments)Object.assign(n,f(e));return n}function l(e){const t={};return Object.assign(t,f(e.signature.returnType)),e.signature.parameterTypes.forEach((e=>Object.assign(t,f(e)))),t}return class{afterCompile(e){const t=[...this.program.elementsByDeclaration.values()].filter((e=>a(e,r.MODULE_EXPORT))).filter((e=>!s(e))).filter((e=>e.declaration.kind===i.FUNCTIONDECLARATION)),n=[...this.program.elementsByDeclaration.values()].filter((e=>a(e,r.DECLARE))).filter((e=>!s(e))).filter((e=>e.declaration.kind===i.FUNCTIONDECLARATION)),o={},f={};for(let e of n){if(!e.instances)continue;if(e.instances.size>1||!e.instances.has(""))throw Error("Can’t import or export generic functions.");e=e.instances.get("");const t=c(e).internalName.split("/").slice(-1)[0];f.hasOwnProperty(t)||(f[t]={}),f[t][e.name]=u(e),Object.assign(o,l(e))}const p={};for(let e of t){if(e.instances.size>1||!e.instances.has(""))throw Error("Can’t import or export generic functions.");e=e.instances.get(""),p[e.name]=u(e),Object.assign(o,l(e))}this.typeData=JSON.stringify({typeIds:o,importedFunctions:f,exportedFunctions:p}),e.addCustomSection("as-bind_bindings",new TextEncoder("utf8").encode(this.typeData))}}}));
